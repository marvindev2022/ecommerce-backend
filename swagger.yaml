openapi: 3.0.0
info:
  version: 1.0.0
  title: Relicario API
  description: API para ecommerce Relicario.

servers:
- url: http://localhost:3000
  description: Servidor local

- url: https://relicario.onrender.com
  description: Servidor Render

tags:
- name: Uploads
- name: Validações
- name: Usuários


paths:
  /file/upload-img:
    patch:
      tags:
      - Uploads
      summary: Salvar arquivo
      description: Salva arquivo no banco de dados
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file: # Nome do campo do arquivo
                  type: string
                  format: binary
      responses:
        "201":
          description: Imagem salva com sucesso
        "400":
          description: Erro ao salvar arquivo

  /validate/email:
    post:
      tags:
      - Validações
      summary: Validar email
      description: Verifica se o usuário existe no banco de dados
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValidateEmail"
            examples:
              Example Json:
                value:
                  email: user@email.com
              Example Type:
                value:
                  email: string
      responses:
        "201":
          description: Não existe nenhum usuário cadastrado com este email
        "400":
          description: Já existe um cadastro com esse email

  /users/registered:
    post:
      tags:
      - Usuários
      summary: Cadastrar novo usuário
      description: Rota para cadastrar um novo usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistered"
            examples:
              Exemple Json:
                value:
                  name: "Nome do usuário"
                  email: "email@example.com"
                  cpf: "12345678900"
                  phone: "123456789"
                  password: "senha123"
              Exemple Type:
                value:
                  name: "string"
                  email: "string"
                  cpf: "string"
                  phone: "string"
                  password: "string"

      responses:
        "201":
          description: Usuário cadastrado com sucesso!
        "400":
          description: Erro ao cadastrar usuário!
  /users/login:
    post:
      tags:
      - Usuários
      summary: Login usuário
      description: Rota login do usuário.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
            examples:
              Example Json:
                value:
                  email: "email@example.com"
                  password: "123456"
              Example Type:
                value:
                  email: "string"
                  password: "string"

      responses:
        "201":
          description: Dados Usuário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
              examples:
                Example Json:
                  value:
                    id: "be89466a-361e-4e56-9ca9-89ace992fac0"
                    name: "Marcus Roza"
                    age: "1990-05-12"
                    photo: "https://scontent-gig4-1.xx.fbcdn.net/v/t39.30808-6/346087374_248780904489604_1788490239312052550_n.jpg?_nc_cat=105&cb=99be929b-59f725be&ccb=1-7&_nc_sid=09cbfe&_nc_eui2=AeF6ort8evUhObIwCKXOggMEn_y7x-wmkvyf_LvH7CaS_JlYf40jAQoimHSym_NAbPy16QDs-i2Mw29M_y3e-zb1&_nc_ohc=5RELifs8iVUAX8-C-im&_nc_ht=scontent-gig4-1.xx&oh=00_AfAZBi3UgqCHJe0MqKKMKH9J7mDntHBlcMOhKBZwj6Gclg&oe=64C61EBE"
                    isVerified: false,
                    token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTA0NzIyMjR9.waD5hRyJ8MLUzMA3BykDcV0sXYFnprGh7My136j5Slo"

        "400":
          description: Erro ao logar usuário!
  /users/{userId}:
    put:
      tags:
      - Usuários
      summary: Editar dados do usuário
      description: Rota para editar dados do usuário.
      parameters:
      - name: userId
        in: path
        required: true
        description: ID do usuário
        schema:
          type: integer
          format: int64
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserEdited"
            examples:
              Example Json:
                value:
                  name: "Nome do usuário"
                  email: "email@example.com"
                  cpf: "12345678900"
                  phone: "123456789"
                  password: "senha123"
                  age: "1990-05-12"
                  photo: "https://scontent-gig4-1.xx.fbcdn.net/v/t39.30808-6/346087374_248780904489604_1788490239312052550_n.jpg?_nc_cat=105&cb=99be929b-59f725be&ccb=1-7&_nc_sid=09cbfe&_nc_eui2=AeF6ort8evUhObIwCKXOggMEn_y7x-wmkvyf_LvH7CaS_JlYf40jAQoimHSym_NAbPy16QDs-i2Mw29M_y3e-zb1&_nc_ohc=5RELifs8iVUAX8-C-im&_nc_ht=scontent-gig4-1.xx&oh=00_AfAZBi3UgqCHJe0MqKKMKH9J7mDntHBlcMOhKBZwj6Gclg&oe=64C61EBE"
                  address:
                    cep: "25264253"
                    complement: "502"
                    number: "202"
              Exemple Type:
                value:
                  name: "string"
                  email: "string"
                  cpf: "string"
                  password: "string"
      responses:
        "201":
          description: Usuário cadastrado com sucesso!
        "400":
          description: Erro interno!
  /users/{userId}/find:
    get:
      tags:
      - Usuários
      summary: Buscar dados do usuário
      description: Rota para listar dados do usuário.
      parameters:
      - name: userId
        in: path
        required: true
        description: ID do usuário
        schema:
          type: integer
          format: int64
          example: 123
      responses:
        "201":
          description: Dados do Usuário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
              examples:
                Example Json:
                  value:
                    name: "Nome do usuário"
                    email: "email@example.com"
                    cpf: "12345678900"
                    phone: "123456789"
                    photo: "url"
                    age: "12/05/1990"
                    password: "senha123"
                    address:
                      cep: "25264253"
                      complement: "502"
                      number: "202"
        "400":
          description: Erro interno!
          content:
            application/json:
              examples:
                Example Json:
                  value: '{"message": "Erro interno na API."}'
  /users/recovery-password:
    post:
      tags:
      - Usuários
      summary: Recuperar senha
      description: Rota para recuperar senha
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryPassword"
            examples:
              Example Json:
                value:
                  email: user@email.com
                  cpf: 111.111.111-11
              Example Type:
                value:
                  email: string
                  cpf: string
      responses:
        "201":
          description: Link para verificação

        "400":
          description: Erro recuperar senha
  /users/change-password/{userId}:
    post:
      tags:
      - Usuários
      summary: Alterar a senha
      description: Rota para recuperar senha
      parameters:
      - name: userId
        in: path
        required: true
        description: ID do usuário
        schema:
          type: integer
          format: int64
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePassword"
            examples:
              Example Json:
                value:
                  password: A123456@
                  newPassword: B789456,
              Example Type:
                value:
                  password: string
                  newPassword: string
      responses:
        "201":
          description: Senha alterada com sucesso

        "400":
          description: Erro ao alterar senha
  /users/{userId}/delete:
    delete:
      tags:
      - Usuários
      summary: Deletar usuário por ID
      description: Rota para deletar um usuário pelo ID.
      parameters:
      - name: userId
        in: path
        required: true
        description: ID do usuário a ser deletado
        schema:
          type: integer
          format: int64
          example: 123
      responses:
        "204":
          description: Usuário deletado com sucesso.
        "404":
          description: Usuário não encontrado.

components:
  schemas:
    UserRegistered:
      type: object
      properties:
        name:
          type: string
          description: Nome do usuário.
        email:
          type: string
          format: email
          description: Endereço de e-mail do usuário.
        cpf:
          type: string
          description: CPF do usuário.
        phone:
          type: string
          description: Número de telefone do usuário.
        password:
          type: string
          format: password
          description: Senha do usuário (deve atender aos requisitos de segurança, como pelo menos 8 caracteres, incluindo letras maiúsculas, minúsculas, números e caracteres especiais).
        address:
          type: object
          properties:
            cep:
              type: string
              description: CEP do endereço do usuário.
            complement:
              type: string
              description: Complemento do endereço.
            number:
              type: string
              description: Número do endereço.

    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          description: Endereço de e-mail do usuário.
        password:
          type: string
          format: password
          description: Senha do usuário para autenticação.

    UserEdited:
      type: object
      properties:
        name:
          type: string
          description: Nome do usuário.
        email:
          type: string
          description: Endereço de e-mail do usuário.
        cpf:
          type: string
          description: CPF do usuário.
        phone:
          type: string
          description: Número de telefone do usuário.
        password:
          type: string
          format: password
          description: Nova senha do usuário (deve atender aos requisitos de segurança).
        address:
          type: object
          properties:
            cep:
              type: string
              description: CEP do endereço do usuário.
            complement:
              type: string
              description: Complemento do endereço.

    UserList:
      type: object
      properties:
        name:
          type: string
          description: Nome do usuário.
        email:
          type: string
          format: email
          description: Endereço de e-mail do usuário.
        cpf:
          type: string
          description: CPF do usuário.
        phone:
          type: string
          description: Número de telefone do usuário.
        password:
          type: string
          format: password
          description: Senha do usuário (hash ou dados de senha confidenciais não devem ser incluídos aqui).
        address:
          type: object
          properties:
            cep:
              type: string
              description: CEP do endereço do usuário.
            complement:
              type: string
              description: Complemento do endereço.

    RecoveryPassword:
      type: object
      properties:
        email:
          type: string
          description: Endereço de e-mail do usuário para recuperação de senha.
        password:
          type: string
          description: Senha do usuário (para fins de validação).

    ChangePassword:
      type: object
      properties:
        email:
          type: string
          description: Endereço de e-mail do usuário para alteração de senha.
        password:
          type: string
          description: Senha do usuário atual.


